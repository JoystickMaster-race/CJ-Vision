import static org.apache.tools.ant.taskdefs.condition.Os.*
apply from: rootProject.file("platforms/platform.gradle")

// dependencies {
// 	simulation wpi.deps.sim.gui(wpi.platforms.desktop, true)
// 	simulation wpi.deps.sim.driverstation(wpi.platforms.desktop, true)

// 	// Websocket extensions require additional configuration.
// 	// simulation wpi.deps.sim.ws_server(wpi.platforms.desktop, true)
// 	// simulation wpi.deps.sim.ws_client(wpi.platforms.desktop, true)
// }

model { // gradle compiler (used with windows and gradlerio only)
	components {
		cjVision(NativeExecutableSpec) {
			if (!isFamily(FAMILY_WINDOWS)) { // if not windows leave don't continue
				return
			}

			targetPlatform wpi.platforms.roborio
			targetPlatform wpi.platforms.desktop

			println wpi.platforms.desktop
			
			sources.cpp {
				source {
					if (project.hasProperty("debugMode")) {
						srcDirs = cj_vision_src + libs_src
					} else {
						srcDirs = vision_all_src
					}
					include '**/*.cpp', '**/*.cc', '**/*.c'
				}

				exportedHeaders {
					if (project.hasProperty("debugMode")) {
						srcDirs = cj_vision_headers + libs_headers
					} else {
						srcDirs = vision_all_headers
					}
				}
			}

			binaries.all {
				if (project.hasProperty("debugMode")) {
					cppCompiler.define 'DEBUG_CJ'
				}

				cppCompiler.args '-std=c++17'
				linker.args '-std=c++17'
			}

			wpi.deps.wpilib(it)
			wpi.deps.vendor.cpp(it)
			wpi.deps.googleTest(it)
		}
	}
}